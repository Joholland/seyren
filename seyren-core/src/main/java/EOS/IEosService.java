/**
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package EOS;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "IEosService", targetNamespace = "http://tempuri.org/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface IEosService {


    /**
     * 
     * @param overrideOthers
     * @param value
     * @param nodeName
     * @param serviceInstanceName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "SetNodeMaintenanceModeByName", action = "http://tempuri.org/IEosService/SetNodeMaintenanceModeByName")
    @WebResult(name = "SetNodeMaintenanceModeByNameResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "SetNodeMaintenanceModeByName", targetNamespace = "http://tempuri.org/", className = "EOS.SetNodeMaintenanceModeByName")
    @ResponseWrapper(localName = "SetNodeMaintenanceModeByNameResponse", targetNamespace = "http://tempuri.org/", className = "EOS.SetNodeMaintenanceModeByNameResponse")
    @Action(input = "http://tempuri.org/IEosService/SetNodeMaintenanceModeByName", output = "http://tempuri.org/IEosService/SetNodeMaintenanceModeByNameResponse")
    public Boolean setNodeMaintenanceModeByName(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "nodeName", targetNamespace = "http://tempuri.org/")
        String nodeName,
        @WebParam(name = "value", targetNamespace = "http://tempuri.org/")
        Boolean value,
        @WebParam(name = "overrideOthers", targetNamespace = "http://tempuri.org/")
        Boolean overrideOthers);

    /**
     * 
     * @param overrideOthers
     * @param value
     * @param serviceInstanceName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "SetServiceInstanceMaintenanceModeByName", action = "http://tempuri.org/IEosService/SetServiceInstanceMaintenanceModeByName")
    @WebResult(name = "SetServiceInstanceMaintenanceModeByNameResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "SetServiceInstanceMaintenanceModeByName", targetNamespace = "http://tempuri.org/", className = "EOS.SetServiceInstanceMaintenanceModeByName")
    @ResponseWrapper(localName = "SetServiceInstanceMaintenanceModeByNameResponse", targetNamespace = "http://tempuri.org/", className = "EOS.SetServiceInstanceMaintenanceModeByNameResponse")
    @Action(input = "http://tempuri.org/IEosService/SetServiceInstanceMaintenanceModeByName", output = "http://tempuri.org/IEosService/SetServiceInstanceMaintenanceModeByNameResponse")
    public Boolean setServiceInstanceMaintenanceModeByName(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "value", targetNamespace = "http://tempuri.org/")
        Boolean value,
        @WebParam(name = "overrideOthers", targetNamespace = "http://tempuri.org/")
        Boolean overrideOthers);

    /**
     * 
     * @param minutes
     * @param overrideOthers
     * @param value
     * @param nodeNameList
     * @param serviceInstanceName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "SetMaintenanceModeByList", action = "http://tempuri.org/IEosService/SetMaintenanceModeByList")
    @WebResult(name = "SetMaintenanceModeByListResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "SetMaintenanceModeByList", targetNamespace = "http://tempuri.org/", className = "EOS.SetMaintenanceModeByList")
    @ResponseWrapper(localName = "SetMaintenanceModeByListResponse", targetNamespace = "http://tempuri.org/", className = "EOS.SetMaintenanceModeByListResponse")
    @Action(input = "http://tempuri.org/IEosService/SetMaintenanceModeByList", output = "http://tempuri.org/IEosService/SetMaintenanceModeByListResponse")
    public Boolean setMaintenanceModeByList(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "nodeNameList", targetNamespace = "http://tempuri.org/")
        String nodeNameList,
        @WebParam(name = "value", targetNamespace = "http://tempuri.org/")
        Boolean value,
        @WebParam(name = "overrideOthers", targetNamespace = "http://tempuri.org/")
        Boolean overrideOthers,
        @WebParam(name = "minutes", targetNamespace = "http://tempuri.org/")
        Integer minutes);

    /**
     * 
     * @param checkKey
     * @param value
     * @param serviceInstanceName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "SetNoOpModeByKey", action = "http://tempuri.org/IEosService/SetNoOpModeByKey")
    @WebResult(name = "SetNoOpModeByKeyResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "SetNoOpModeByKey", targetNamespace = "http://tempuri.org/", className = "EOS.SetNoOpModeByKey")
    @ResponseWrapper(localName = "SetNoOpModeByKeyResponse", targetNamespace = "http://tempuri.org/", className = "EOS.SetNoOpModeByKeyResponse")
    @Action(input = "http://tempuri.org/IEosService/SetNoOpModeByKey", output = "http://tempuri.org/IEosService/SetNoOpModeByKeyResponse")
    public Boolean setNoOpModeByKey(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "checkKey", targetNamespace = "http://tempuri.org/")
        String checkKey,
        @WebParam(name = "value", targetNamespace = "http://tempuri.org/")
        Boolean value);

    /**
     * 
     * @param reason
     * @param nodeName
     * @param serviceInstanceName
     * @param overrideCapacity
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "Convict", action = "http://tempuri.org/IEosService/Convict")
    @WebResult(name = "ConvictResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "Convict", targetNamespace = "http://tempuri.org/", className = "EOS.Convict")
    @ResponseWrapper(localName = "ConvictResponse", targetNamespace = "http://tempuri.org/", className = "EOS.ConvictResponse")
    @Action(input = "http://tempuri.org/IEosService/Convict", output = "http://tempuri.org/IEosService/ConvictResponse")
    public Boolean convict(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "nodeName", targetNamespace = "http://tempuri.org/")
        String nodeName,
        @WebParam(name = "overrideCapacity", targetNamespace = "http://tempuri.org/")
        Boolean overrideCapacity,
        @WebParam(name = "reason", targetNamespace = "http://tempuri.org/")
        String reason);

    /**
     * 
     * @param reason
     * @param serviceInstanceName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "ConvictServiceInstance", action = "http://tempuri.org/IEosService/ConvictServiceInstance")
    @WebResult(name = "ConvictServiceInstanceResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "ConvictServiceInstance", targetNamespace = "http://tempuri.org/", className = "EOS.ConvictServiceInstance")
    @ResponseWrapper(localName = "ConvictServiceInstanceResponse", targetNamespace = "http://tempuri.org/", className = "EOS.ConvictServiceInstanceResponse")
    @Action(input = "http://tempuri.org/IEosService/ConvictServiceInstance", output = "http://tempuri.org/IEosService/ConvictServiceInstanceResponse")
    public Boolean convictServiceInstance(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "reason", targetNamespace = "http://tempuri.org/")
        String reason);

    /**
     * 
     * @param deploySameVersion
     * @param arguments
     * @param serviceInstanceName
     * @param version
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "DeployService", action = "http://tempuri.org/IEosService/DeployService")
    @WebResult(name = "DeployServiceResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "DeployService", targetNamespace = "http://tempuri.org/", className = "EOS.DeployService")
    @ResponseWrapper(localName = "DeployServiceResponse", targetNamespace = "http://tempuri.org/", className = "EOS.DeployServiceResponse")
    @Action(input = "http://tempuri.org/IEosService/DeployService", output = "http://tempuri.org/IEosService/DeployServiceResponse")
    public Boolean deployService(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "version", targetNamespace = "http://tempuri.org/")
        String version,
        @WebParam(name = "arguments", targetNamespace = "http://tempuri.org/")
        String arguments,
        @WebParam(name = "deploySameVersion", targetNamespace = "http://tempuri.org/")
        Boolean deploySameVersion);

    /**
     * 
     * @param deploySameVersion
     * @param arguments
     * @param nodeNameList
     * @param serviceInstanceName
     * @param overrideStateRestriction
     * @param version
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "DeployServiceToMachines", action = "http://tempuri.org/IEosService/DeployServiceToMachines")
    @WebResult(name = "DeployServiceToMachinesResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "DeployServiceToMachines", targetNamespace = "http://tempuri.org/", className = "EOS.DeployServiceToMachines")
    @ResponseWrapper(localName = "DeployServiceToMachinesResponse", targetNamespace = "http://tempuri.org/", className = "EOS.DeployServiceToMachinesResponse")
    @Action(input = "http://tempuri.org/IEosService/DeployServiceToMachines", output = "http://tempuri.org/IEosService/DeployServiceToMachinesResponse")
    public Boolean deployServiceToMachines(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "nodeNameList", targetNamespace = "http://tempuri.org/")
        String nodeNameList,
        @WebParam(name = "version", targetNamespace = "http://tempuri.org/")
        String version,
        @WebParam(name = "arguments", targetNamespace = "http://tempuri.org/")
        String arguments,
        @WebParam(name = "deploySameVersion", targetNamespace = "http://tempuri.org/")
        Boolean deploySameVersion,
        @WebParam(name = "overrideStateRestriction", targetNamespace = "http://tempuri.org/")
        Boolean overrideStateRestriction);

    /**
     * 
     * @param details
     * @param failureKey
     * @param hostname
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "NotifyNodeFailure", action = "http://tempuri.org/IEosService/NotifyNodeFailure")
    @WebResult(name = "NotifyNodeFailureResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "NotifyNodeFailure", targetNamespace = "http://tempuri.org/", className = "EOS.NotifyNodeFailure")
    @ResponseWrapper(localName = "NotifyNodeFailureResponse", targetNamespace = "http://tempuri.org/", className = "EOS.NotifyNodeFailureResponse")
    @Action(input = "http://tempuri.org/IEosService/NotifyNodeFailure", output = "http://tempuri.org/IEosService/NotifyNodeFailureResponse")
    public Boolean notifyNodeFailure(
        @WebParam(name = "hostname", targetNamespace = "http://tempuri.org/")
        String hostname,
        @WebParam(name = "failureKey", targetNamespace = "http://tempuri.org/")
        String failureKey,
        @WebParam(name = "details", targetNamespace = "http://tempuri.org/")
        String details);

    /**
     * 
     * @param nodeName
     * @param serviceInstanceName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "RotationChanged", action = "http://tempuri.org/IEosService/RotationChanged")
    @WebResult(name = "RotationChangedResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "RotationChanged", targetNamespace = "http://tempuri.org/", className = "EOS.RotationChanged")
    @ResponseWrapper(localName = "RotationChangedResponse", targetNamespace = "http://tempuri.org/", className = "EOS.RotationChangedResponse")
    @Action(input = "http://tempuri.org/IEosService/RotationChanged", output = "http://tempuri.org/IEosService/RotationChangedResponse")
    public Boolean rotationChanged(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "nodeName", targetNamespace = "http://tempuri.org/")
        String nodeName);

    /**
     * 
     * @param nodeNameList
     * @param serviceInstanceName
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod(operationName = "Interrogate", action = "http://tempuri.org/IEosService/Interrogate")
    @WebResult(name = "InterrogateResult", targetNamespace = "http://tempuri.org/")
    @RequestWrapper(localName = "Interrogate", targetNamespace = "http://tempuri.org/", className = "EOS.Interrogate")
    @ResponseWrapper(localName = "InterrogateResponse", targetNamespace = "http://tempuri.org/", className = "EOS.InterrogateResponse")
    @Action(input = "http://tempuri.org/IEosService/Interrogate", output = "http://tempuri.org/IEosService/InterrogateResponse")
    public Boolean interrogate(
        @WebParam(name = "serviceInstanceName", targetNamespace = "http://tempuri.org/")
        String serviceInstanceName,
        @WebParam(name = "nodeNameList", targetNamespace = "http://tempuri.org/")
        String nodeNameList);

}
